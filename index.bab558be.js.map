{"mappings":"CAAA,SAAsBA,G,oCAYdC,EAAWC,KAAKC,GAChB,IAAMC,EAAgBC,EAAUF,GAE3BG,MAAMC,QAAQH,IAIjBI,EAAeJ,EAEfH,EAAWQ,KAAI,SAAAC,GACb,IAAK,IAAIC,EAAI,EAAGA,EAAIH,EAAaI,OAAQD,GAAK,EAC5CE,EAAIX,KAAK,GAAcY,OAAXC,EAAQ,KAAgBD,OAAbJ,EAAU,KAAKI,OAAFH,G,MAPxCV,EAAWQ,KAAI,SAAAC,G,OAAaG,EAAIX,KAAK,GAAcY,OAAXC,EAAQ,KAAaD,OAAVJ,G,IACnDT,EAAa,G,EAZfc,EAAUC,EACVX,EAAYL,EAAIgB,GAChBf,EAAa,GACbO,EAAe,GAEnB,GAAyB,iBAAdH,EACT,IAAK,IAAMY,KAAOZ,EAASa,EAAAD,QAiBtBJ,EAAIX,KAAK,GAAWY,OAARC,G,EA3BjBF,EAAM,GAEV,IAAK,IAAMM,KAAOnB,EAAGoB,EAAAD,E,CA+BvBE,CAAa,CACXC,EAAG,CACDC,EAAG,EACHC,EAAG,CAAC,EAAG,EAAG,IAEZC,GAAG,EACHC,EAAG,CAAEC,EAAG","sources":["src/codeware/objKey.js"],"sourcesContent":["function getKeysArray(obj) {\n  let str = [];\n\n  for (const key in obj) {\n\n    let mainKey = key;\n    let itemValue = obj[key];\n    let secondKeys = [];\n    let nestedValues = [];\n\n    if (typeof itemValue === 'object') {\n      for (const key in itemValue) {\n        secondKeys.push(key);\n        const isNestedValue = itemValue[key];\n\n        if (!Array.isArray(isNestedValue)) {\n          secondKeys.map(secondKey => str.push(`${mainKey}.${secondKey}`));\n          secondKeys = [];\n        } else {\n          nestedValues = isNestedValue;\n\n          secondKeys.map(secondKey => {\n            for (let i = 0; i < nestedValues.length; i += 1) {\n              str.push(`${mainKey}.${secondKey}.${i}`);\n            }\n          });\n        }\n      }\n    } else str.push(`${mainKey}`);\n  }\n  // console.log(str);\n  return str;\n}\n\ngetKeysArray({\n  a: {\n    b: 2,\n    q: [0, 3, 4],\n  },\n  x: true,\n  d: { f: null },\n});\n"],"names":["obj","secondKeys","push","key1","isNestedValue","itemValue","Array","isArray","nestedValues","map","secondKey","i","length","str","concat","mainKey","key","key11","_loop","key2","_loop1","$2081915ed7f63533$var$getKeysArray","a","b","q","x","d","f"],"version":3,"file":"index.bab558be.js.map"}