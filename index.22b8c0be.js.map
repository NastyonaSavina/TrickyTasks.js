{"mappings":"CAAA,SAAsBA,GACpB,IAAIC,EAAM,GAEV,IAAK,MAAMC,KAAOF,EAAK,CAErB,IAAIG,EAAUD,EACVE,EAAYJ,EAAIE,GAChBG,EAAa,GACbC,EAAe,GAEnB,GAAyB,iBAAdF,EACT,IAAK,MAAMG,KAAOH,EAAW,CAC3BC,EAAWG,KAAKD,GAChB,MAAME,EAAgBL,EAAUG,GAE3BG,MAAMC,QAAQF,IAIjBH,EAAeG,EAEfJ,EAAWO,KAAIC,IACb,IAAK,IAAIC,EAAI,EAAGA,EAAIR,EAAaS,OAAQD,GAAK,EAC5Cb,EAAIO,KAAK,GAAGL,KAAWU,KAAaC,IAAI,MAP5CT,EAAWO,KAAIC,GAAaZ,EAAIO,KAAK,GAAGL,KAAWU,OACnDR,EAAa,G,MAWZJ,EAAIO,KAAK,GAAGL,I,EAMvBa,CAAa,CACXC,EAAG,CACDC,EAAG,EACHC,EAAG,CAAC,EAAG,EAAG,IAEZC,GAAG,EACHC,EAAG,CAAEC,EAAG","sources":["src/objKey.js"],"sourcesContent":["function getKeysArray(obj) {\n  let str = [];\n\n  for (const key in obj) {\n\n    let mainKey = key;\n    let itemValue = obj[key];\n    let secondKeys = [];\n    let nestedValues = [];\n\n    if (typeof itemValue === 'object') {\n      for (const key in itemValue) {\n        secondKeys.push(key);\n        const isNestedValue = itemValue[key];\n\n        if (!Array.isArray(isNestedValue)) {\n          secondKeys.map(secondKey => str.push(`${mainKey}.${secondKey}`));\n          secondKeys = [];\n        } else {\n          nestedValues = isNestedValue;\n\n          secondKeys.map(secondKey => {\n            for (let i = 0; i < nestedValues.length; i += 1) {\n              str.push(`${mainKey}.${secondKey}.${i}`);\n            }\n          });\n        }\n      }\n    } else str.push(`${mainKey}`);\n  }\n  // console.log(str);\n  return str;\n}\n\ngetKeysArray({\n  a: {\n    b: 2,\n    q: [0, 3, 4],\n  },\n  x: true,\n  d: { f: null },\n});\n"],"names":["obj","str","key","mainKey","itemValue","secondKeys","nestedValues","key1","push","isNestedValue","Array","isArray","map","secondKey","i","length","$6b7d708486222f9b$var$getKeysArray","a","b","q","x","d","f"],"version":3,"file":"index.22b8c0be.js.map"}