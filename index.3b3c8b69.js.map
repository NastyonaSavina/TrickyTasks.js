{"mappings":"AAAA,MA+BMA,EA/BS,CACb,CAAEC,GAAI,MAAOC,MAAO,EAAGC,KAAM,CAAC,KAAM,WACpC,CAAEF,GAAI,MAAOC,MAAO,EAAGC,KAAM,CAAC,OAAQ,QACtC,CAAEF,GAAI,MAAOC,MAAO,GAAIC,KAAM,CAAC,OAAQ,KAAM,WAC7C,CAAEF,GAAI,MAAOC,MAAO,EAAGC,KAAM,CAAC,MAAO,UACrC,CAAEF,GAAI,MAAOC,MAAO,EAAGC,KAAM,CAAC,KAAM,SAAU,WAiBvCC,QAAO,CAACC,EAASC,KACtBD,EAAQE,QAAQD,EAAMH,MAEfE,IACN,IAa6B,MAA5BG,EAAc,CAACC,EAAKC,KACnBD,EAAIE,eAAeD,KACtBD,EAAIC,GAAO,GAGbD,EAAIC,IAAQ,EAELD,GAMkBT,EAFII,OAAOI,EAAa","sources":["src/test-tasks/reduceTask.js"],"sourcesContent":["const tweets = [\n  { id: '000', likes: 5, tags: ['js', 'nodejs'] },\n  { id: '001', likes: 2, tags: ['html', 'css'] },\n  { id: '002', likes: 17, tags: ['html', 'js', 'nodejs'] },\n  { id: '003', likes: 8, tags: ['css', 'react'] },\n  { id: '004', likes: 0, tags: ['js', 'nodejs', 'react'] },\n];\n\n// Пройдемо по всіх елементах колекції і додамо значення властивості tags\n// до акумулятора, початкове значення якого вкажемо порожнім масивом [].\n// На кожній ітерації пушимо в акумулятор усі елементи tweet.tags і повертаємо його.\n// const tags = tweets.reduce((allTags, tweet) => {\n//   allTags.push(...tweet.tags);\n\n//   return allTags;\n// }, []);\n\n// console.log(tags);\n\n// Мабуть, збирання тегів - не одиночна операція, тому напишемо функцію\n// для збирання тегів з колекції\nconst getTags = tweets =>\n  tweets.reduce((allTags, tweet) => {\n    allTags.push(...tweet.tags);\n\n    return allTags;\n  }, []);\n\n// console.log(getTags(tweets));\n\n\nconst tags = getTags(tweets);\n\n// Винесемо callback-функцію окремо, а в reducе передамо посилання на неї.\n// Це стандартна практика, якщо callback-функція досить велика.\n\n// Якщо в об'єкті-акумуляторі acc відсутня своя властивість з ключем tag,\n// то створюємо її і записуємо їй значення 0.\n// В іншому випадку збільшуємо значення на 1.\nconst getTagStats = (acc, tag) => {\n  if (!acc.hasOwnProperty(tag)) {\n    acc[tag] = 0;\n  }\n\n  acc[tag] += 1;\n\n  return acc;\n};\n\n// Початкове значення акумулятора - це порожній об'єкт {}\nconst countTags = tags => tags.reduce(getTagStats, {});\n\nconst tagCount = countTags(tags);\n// console.log(tagCount);\n"],"names":["$17ee11c0f52d0e64$var$tags","id","likes","tags","reduce","allTags","tweet","push","$17ee11c0f52d0e64$var$getTagStats","acc","tag","hasOwnProperty"],"version":3,"file":"index.3b3c8b69.js.map"}